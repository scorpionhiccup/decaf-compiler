Terminals unused in grammar

   T_NEWLINE
   T_QUIT


Rules useless in parser due to conflicts

   46 Literals: T_INT
   47         | TRUE
   48         | FALSE


State 5 conflicts: 1 reduce/reduce
State 55 conflicts: 7 shift/reduce
State 58 conflicts: 7 shift/reduce
State 60 conflicts: 7 shift/reduce
State 61 conflicts: 2 reduce/reduce
State 63 conflicts: 2 reduce/reduce
State 64 conflicts: 2 reduce/reduce
State 70 conflicts: 7 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: START PROG_ID LBRACE Main RBRACE

    2 Main: Field_Declarations Statements
    3     | %empty

    4 Field_Declarations: Field_Declaration SEMI_COLON Field_Declarations
    5                   | %empty

    6 Field_Declaration: Type Def

    7 Def: IDENTIFIER TLSQUARE InExpression TRSQUARE
    8    | IDENTIFIER

    9 Location: IDENTIFIER TLSQUARE Expression TRSQUARE
   10         | IDENTIFIER

   11 InExpression: T_INT

   12 Expression: Def
   13           | T_INT
   14           | TRUE
   15           | FALSE
   16           | Unary_Op Expression
   17           | Expression Operator Expression

   18 Expression_Right: Location
   19                 | T_INT
   20                 | TRUE
   21                 | FALSE
   22                 | Unary_Op Expression_Right
   23                 | Expression_Right Operator Expression_Right

   24 Statements: Statement SEMI_COLON Statements
   25           | %empty

   26 Statement: Location TEQUAL Expression_Right
   27          | CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND

   28 Callout_Arg: Arguments
   29            | Arguments TCOMMA Callout_Arg

   30 Arguments: Literals
   31          | Expression_Right

   32 Operator: Op

   33 Op: TDIV
   34   | TMUL
   35   | MOD
   36   | TPLUS
   37   | TMINUS
   38   | TGREAT
   39   | TLESS

   40 Unary_Op: NOT
   41         | TMINUS

   42 Type: INT
   43     | BOOLEAN

   44 Literals: CHAR_LITERAL
   45         | STRING_LITERAL
   46         | T_INT
   47         | TRUE
   48         | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 11 13 19 46
IDENTIFIER (259) 7 8 9 10
STRING_LITERAL (260) 27 45
PROG_ID (261) 1
BOOLEAN (262) 43
CALLOUT (263) 27
INT (264) 42
TEQUAL (265) 26
TPLUS (266) 36
TMINUS (267) 37 41
TMUL (268) 34
TDIV (269) 33
NOT (270) 40
MOD (271) 35
RBRACE (272) 1
LBRACE (273) 1
T_NEWLINE (274)
T_QUIT (275)
START (276) 1
TLROUND (277) 27
TRROUND (278) 27
TLSQUARE (279) 7 9
TRSQUARE (280) 7 9
FALSE (281) 15 21 48
TRUE (282) 14 20 47
CHAR_LITERAL (283) 44
TLESS (284) 39
TGREAT (285) 38
SEMI_COLON (286) 4 24
TCOMMA (287) 27 29


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1, on right: 0
Main (35)
    on left: 2 3, on right: 1
Field_Declarations (36)
    on left: 4 5, on right: 2 4
Field_Declaration (37)
    on left: 6, on right: 4
Def (38)
    on left: 7 8, on right: 6 12
Location (39)
    on left: 9 10, on right: 18 26
InExpression (40)
    on left: 11, on right: 7
Expression (41)
    on left: 12 13 14 15 16 17, on right: 9 16 17
Expression_Right (42)
    on left: 18 19 20 21 22 23, on right: 22 23 26 31
Statements (43)
    on left: 24 25, on right: 2 24
Statement (44)
    on left: 26 27, on right: 24
Callout_Arg (45)
    on left: 28 29, on right: 27 29
Arguments (46)
    on left: 30 31, on right: 28 29
Operator (47)
    on left: 32, on right: 17 23
Op (48)
    on left: 33 34 35 36 37 38 39, on right: 32
Unary_Op (49)
    on left: 40 41, on right: 16 22
Type (50)
    on left: 42 43, on right: 6
Literals (51)
    on left: 44 45 46 47 48, on right: 30


State 0

    0 $accept: . Program $end

    START  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: START . PROG_ID LBRACE Main RBRACE

    PROG_ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: START PROG_ID . LBRACE Main RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: START PROG_ID LBRACE . Main RBRACE

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7

    RBRACE    reduce using rule 3 (Main)
    RBRACE    [reduce using rule 5 (Field_Declarations)]
    $default  reduce using rule 5 (Field_Declarations)

    Main                go to state 8
    Field_Declarations  go to state 9
    Field_Declaration   go to state 10
    Type                go to state 11


State 6

   43 Type: BOOLEAN .

    $default  reduce using rule 43 (Type)


State 7

   42 Type: INT .

    $default  reduce using rule 42 (Type)


State 8

    1 Program: START PROG_ID LBRACE Main . RBRACE

    RBRACE  shift, and go to state 12


State 9

    2 Main: Field_Declarations . Statements

    IDENTIFIER  shift, and go to state 13
    CALLOUT     shift, and go to state 14

    $default  reduce using rule 25 (Statements)

    Location    go to state 15
    Statements  go to state 16
    Statement   go to state 17


State 10

    4 Field_Declarations: Field_Declaration . SEMI_COLON Field_Declarations

    SEMI_COLON  shift, and go to state 18


State 11

    6 Field_Declaration: Type . Def

    IDENTIFIER  shift, and go to state 19

    Def  go to state 20


State 12

    1 Program: START PROG_ID LBRACE Main RBRACE .

    $default  reduce using rule 1 (Program)


State 13

    9 Location: IDENTIFIER . TLSQUARE Expression TRSQUARE
   10         | IDENTIFIER .

    TLSQUARE  shift, and go to state 21

    $default  reduce using rule 10 (Location)


State 14

   27 Statement: CALLOUT . TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND

    TLROUND  shift, and go to state 22


State 15

   26 Statement: Location . TEQUAL Expression_Right

    TEQUAL  shift, and go to state 23


State 16

    2 Main: Field_Declarations Statements .

    $default  reduce using rule 2 (Main)


State 17

   24 Statements: Statement . SEMI_COLON Statements

    SEMI_COLON  shift, and go to state 24


State 18

    4 Field_Declarations: Field_Declaration SEMI_COLON . Field_Declarations

    BOOLEAN  shift, and go to state 6
    INT      shift, and go to state 7

    $default  reduce using rule 5 (Field_Declarations)

    Field_Declarations  go to state 25
    Field_Declaration   go to state 10
    Type                go to state 11


State 19

    7 Def: IDENTIFIER . TLSQUARE InExpression TRSQUARE
    8    | IDENTIFIER .

    TLSQUARE  shift, and go to state 26

    $default  reduce using rule 8 (Def)


State 20

    6 Field_Declaration: Type Def .

    $default  reduce using rule 6 (Field_Declaration)


State 21

    9 Location: IDENTIFIER TLSQUARE . Expression TRSQUARE

    T_INT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 19
    TMINUS      shift, and go to state 28
    NOT         shift, and go to state 29
    FALSE       shift, and go to state 30
    TRUE        shift, and go to state 31

    Def         go to state 32
    Expression  go to state 33
    Unary_Op    go to state 34


State 22

   27 Statement: CALLOUT TLROUND . STRING_LITERAL TCOMMA Callout_Arg TRROUND

    STRING_LITERAL  shift, and go to state 35


State 23

   26 Statement: Location TEQUAL . Expression_Right

    T_INT       shift, and go to state 36
    IDENTIFIER  shift, and go to state 13
    TMINUS      shift, and go to state 28
    NOT         shift, and go to state 29
    FALSE       shift, and go to state 37
    TRUE        shift, and go to state 38

    Location          go to state 39
    Expression_Right  go to state 40
    Unary_Op          go to state 41


State 24

   24 Statements: Statement SEMI_COLON . Statements

    IDENTIFIER  shift, and go to state 13
    CALLOUT     shift, and go to state 14

    $default  reduce using rule 25 (Statements)

    Location    go to state 15
    Statements  go to state 42
    Statement   go to state 17


State 25

    4 Field_Declarations: Field_Declaration SEMI_COLON Field_Declarations .

    $default  reduce using rule 4 (Field_Declarations)


State 26

    7 Def: IDENTIFIER TLSQUARE . InExpression TRSQUARE

    T_INT  shift, and go to state 43

    InExpression  go to state 44


State 27

   13 Expression: T_INT .

    $default  reduce using rule 13 (Expression)


State 28

   41 Unary_Op: TMINUS .

    $default  reduce using rule 41 (Unary_Op)


State 29

   40 Unary_Op: NOT .

    $default  reduce using rule 40 (Unary_Op)


State 30

   15 Expression: FALSE .

    $default  reduce using rule 15 (Expression)


State 31

   14 Expression: TRUE .

    $default  reduce using rule 14 (Expression)


State 32

   12 Expression: Def .

    $default  reduce using rule 12 (Expression)


State 33

    9 Location: IDENTIFIER TLSQUARE Expression . TRSQUARE
   17 Expression: Expression . Operator Expression

    TPLUS     shift, and go to state 45
    TMINUS    shift, and go to state 46
    TMUL      shift, and go to state 47
    TDIV      shift, and go to state 48
    MOD       shift, and go to state 49
    TRSQUARE  shift, and go to state 50
    TLESS     shift, and go to state 51
    TGREAT    shift, and go to state 52

    Operator  go to state 53
    Op        go to state 54


State 34

   16 Expression: Unary_Op . Expression

    T_INT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 19
    TMINUS      shift, and go to state 28
    NOT         shift, and go to state 29
    FALSE       shift, and go to state 30
    TRUE        shift, and go to state 31

    Def         go to state 32
    Expression  go to state 55
    Unary_Op    go to state 34


State 35

   27 Statement: CALLOUT TLROUND STRING_LITERAL . TCOMMA Callout_Arg TRROUND

    TCOMMA  shift, and go to state 56


State 36

   19 Expression_Right: T_INT .

    $default  reduce using rule 19 (Expression_Right)


State 37

   21 Expression_Right: FALSE .

    $default  reduce using rule 21 (Expression_Right)


State 38

   20 Expression_Right: TRUE .

    $default  reduce using rule 20 (Expression_Right)


State 39

   18 Expression_Right: Location .

    $default  reduce using rule 18 (Expression_Right)


State 40

   23 Expression_Right: Expression_Right . Operator Expression_Right
   26 Statement: Location TEQUAL Expression_Right .

    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    MOD     shift, and go to state 49
    TLESS   shift, and go to state 51
    TGREAT  shift, and go to state 52

    $default  reduce using rule 26 (Statement)

    Operator  go to state 57
    Op        go to state 54


State 41

   22 Expression_Right: Unary_Op . Expression_Right

    T_INT       shift, and go to state 36
    IDENTIFIER  shift, and go to state 13
    TMINUS      shift, and go to state 28
    NOT         shift, and go to state 29
    FALSE       shift, and go to state 37
    TRUE        shift, and go to state 38

    Location          go to state 39
    Expression_Right  go to state 58
    Unary_Op          go to state 41


State 42

   24 Statements: Statement SEMI_COLON Statements .

    $default  reduce using rule 24 (Statements)


State 43

   11 InExpression: T_INT .

    $default  reduce using rule 11 (InExpression)


State 44

    7 Def: IDENTIFIER TLSQUARE InExpression . TRSQUARE

    TRSQUARE  shift, and go to state 59


State 45

   36 Op: TPLUS .

    $default  reduce using rule 36 (Op)


State 46

   37 Op: TMINUS .

    $default  reduce using rule 37 (Op)


State 47

   34 Op: TMUL .

    $default  reduce using rule 34 (Op)


State 48

   33 Op: TDIV .

    $default  reduce using rule 33 (Op)


State 49

   35 Op: MOD .

    $default  reduce using rule 35 (Op)


State 50

    9 Location: IDENTIFIER TLSQUARE Expression TRSQUARE .

    $default  reduce using rule 9 (Location)


State 51

   39 Op: TLESS .

    $default  reduce using rule 39 (Op)


State 52

   38 Op: TGREAT .

    $default  reduce using rule 38 (Op)


State 53

   17 Expression: Expression Operator . Expression

    T_INT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 19
    TMINUS      shift, and go to state 28
    NOT         shift, and go to state 29
    FALSE       shift, and go to state 30
    TRUE        shift, and go to state 31

    Def         go to state 32
    Expression  go to state 60
    Unary_Op    go to state 34


State 54

   32 Operator: Op .

    $default  reduce using rule 32 (Operator)


State 55

   16 Expression: Unary_Op Expression .
   17           | Expression . Operator Expression

    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    MOD     shift, and go to state 49
    TLESS   shift, and go to state 51
    TGREAT  shift, and go to state 52

    TPLUS     [reduce using rule 16 (Expression)]
    TMINUS    [reduce using rule 16 (Expression)]
    TMUL      [reduce using rule 16 (Expression)]
    TDIV      [reduce using rule 16 (Expression)]
    MOD       [reduce using rule 16 (Expression)]
    TLESS     [reduce using rule 16 (Expression)]
    TGREAT    [reduce using rule 16 (Expression)]
    $default  reduce using rule 16 (Expression)

    Operator  go to state 53
    Op        go to state 54


State 56

   27 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA . Callout_Arg TRROUND

    T_INT           shift, and go to state 61
    IDENTIFIER      shift, and go to state 13
    STRING_LITERAL  shift, and go to state 62
    TMINUS          shift, and go to state 28
    NOT             shift, and go to state 29
    FALSE           shift, and go to state 63
    TRUE            shift, and go to state 64
    CHAR_LITERAL    shift, and go to state 65

    Location          go to state 39
    Expression_Right  go to state 66
    Callout_Arg       go to state 67
    Arguments         go to state 68
    Unary_Op          go to state 41
    Literals          go to state 69


State 57

   23 Expression_Right: Expression_Right Operator . Expression_Right

    T_INT       shift, and go to state 36
    IDENTIFIER  shift, and go to state 13
    TMINUS      shift, and go to state 28
    NOT         shift, and go to state 29
    FALSE       shift, and go to state 37
    TRUE        shift, and go to state 38

    Location          go to state 39
    Expression_Right  go to state 70
    Unary_Op          go to state 41


State 58

   22 Expression_Right: Unary_Op Expression_Right .
   23                 | Expression_Right . Operator Expression_Right

    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    MOD     shift, and go to state 49
    TLESS   shift, and go to state 51
    TGREAT  shift, and go to state 52

    TPLUS     [reduce using rule 22 (Expression_Right)]
    TMINUS    [reduce using rule 22 (Expression_Right)]
    TMUL      [reduce using rule 22 (Expression_Right)]
    TDIV      [reduce using rule 22 (Expression_Right)]
    MOD       [reduce using rule 22 (Expression_Right)]
    TLESS     [reduce using rule 22 (Expression_Right)]
    TGREAT    [reduce using rule 22 (Expression_Right)]
    $default  reduce using rule 22 (Expression_Right)

    Operator  go to state 57
    Op        go to state 54


State 59

    7 Def: IDENTIFIER TLSQUARE InExpression TRSQUARE .

    $default  reduce using rule 7 (Def)


State 60

   17 Expression: Expression . Operator Expression
   17           | Expression Operator Expression .

    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    MOD     shift, and go to state 49
    TLESS   shift, and go to state 51
    TGREAT  shift, and go to state 52

    TPLUS     [reduce using rule 17 (Expression)]
    TMINUS    [reduce using rule 17 (Expression)]
    TMUL      [reduce using rule 17 (Expression)]
    TDIV      [reduce using rule 17 (Expression)]
    MOD       [reduce using rule 17 (Expression)]
    TLESS     [reduce using rule 17 (Expression)]
    TGREAT    [reduce using rule 17 (Expression)]
    $default  reduce using rule 17 (Expression)

    Operator  go to state 53
    Op        go to state 54


State 61

   19 Expression_Right: T_INT .
   46 Literals: T_INT .

    TRROUND   reduce using rule 19 (Expression_Right)
    TRROUND   [reduce using rule 46 (Literals)]
    TCOMMA    reduce using rule 19 (Expression_Right)
    TCOMMA    [reduce using rule 46 (Literals)]
    $default  reduce using rule 19 (Expression_Right)


State 62

   45 Literals: STRING_LITERAL .

    $default  reduce using rule 45 (Literals)


State 63

   21 Expression_Right: FALSE .
   48 Literals: FALSE .

    TRROUND   reduce using rule 21 (Expression_Right)
    TRROUND   [reduce using rule 48 (Literals)]
    TCOMMA    reduce using rule 21 (Expression_Right)
    TCOMMA    [reduce using rule 48 (Literals)]
    $default  reduce using rule 21 (Expression_Right)


State 64

   20 Expression_Right: TRUE .
   47 Literals: TRUE .

    TRROUND   reduce using rule 20 (Expression_Right)
    TRROUND   [reduce using rule 47 (Literals)]
    TCOMMA    reduce using rule 20 (Expression_Right)
    TCOMMA    [reduce using rule 47 (Literals)]
    $default  reduce using rule 20 (Expression_Right)


State 65

   44 Literals: CHAR_LITERAL .

    $default  reduce using rule 44 (Literals)


State 66

   23 Expression_Right: Expression_Right . Operator Expression_Right
   31 Arguments: Expression_Right .

    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    MOD     shift, and go to state 49
    TLESS   shift, and go to state 51
    TGREAT  shift, and go to state 52

    $default  reduce using rule 31 (Arguments)

    Operator  go to state 57
    Op        go to state 54


State 67

   27 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg . TRROUND

    TRROUND  shift, and go to state 71


State 68

   28 Callout_Arg: Arguments .
   29            | Arguments . TCOMMA Callout_Arg

    TCOMMA  shift, and go to state 72

    $default  reduce using rule 28 (Callout_Arg)


State 69

   30 Arguments: Literals .

    $default  reduce using rule 30 (Arguments)


State 70

   23 Expression_Right: Expression_Right . Operator Expression_Right
   23                 | Expression_Right Operator Expression_Right .

    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    MOD     shift, and go to state 49
    TLESS   shift, and go to state 51
    TGREAT  shift, and go to state 52

    TPLUS     [reduce using rule 23 (Expression_Right)]
    TMINUS    [reduce using rule 23 (Expression_Right)]
    TMUL      [reduce using rule 23 (Expression_Right)]
    TDIV      [reduce using rule 23 (Expression_Right)]
    MOD       [reduce using rule 23 (Expression_Right)]
    TLESS     [reduce using rule 23 (Expression_Right)]
    TGREAT    [reduce using rule 23 (Expression_Right)]
    $default  reduce using rule 23 (Expression_Right)

    Operator  go to state 57
    Op        go to state 54


State 71

   27 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND .

    $default  reduce using rule 27 (Statement)


State 72

   29 Callout_Arg: Arguments TCOMMA . Callout_Arg

    T_INT           shift, and go to state 61
    IDENTIFIER      shift, and go to state 13
    STRING_LITERAL  shift, and go to state 62
    TMINUS          shift, and go to state 28
    NOT             shift, and go to state 29
    FALSE           shift, and go to state 63
    TRUE            shift, and go to state 64
    CHAR_LITERAL    shift, and go to state 65

    Location          go to state 39
    Expression_Right  go to state 66
    Callout_Arg       go to state 73
    Arguments         go to state 68
    Unary_Op          go to state 41
    Literals          go to state 69


State 73

   29 Callout_Arg: Arguments TCOMMA Callout_Arg .

    $default  reduce using rule 29 (Callout_Arg)
