Terminals unused in grammar

   T_NEWLINE
   T_QUIT


Rules useless in parser due to conflicts

   46 Literals: T_INT
   47         | TRUE
   48         | FALSE


State 3 conflicts: 1 reduce/reduce
State 54 conflicts: 7 shift/reduce
State 57 conflicts: 7 shift/reduce
State 59 conflicts: 7 shift/reduce
State 60 conflicts: 2 reduce/reduce
State 62 conflicts: 2 reduce/reduce
State 63 conflicts: 2 reduce/reduce
State 69 conflicts: 7 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: START LBRACE Main RBRACE

    2 Main: Field_Declarations Statements
    3     | %empty

    4 Field_Declarations: Field_Declaration SEMI_COLON Field_Declarations
    5                   | %empty

    6 Field_Declaration: Type Def

    7 Def: IDENTIFIER TLSQUARE InExpression TRSQUARE
    8    | IDENTIFIER

    9 Location: IDENTIFIER TLSQUARE Expression TRSQUARE
   10         | IDENTIFIER

   11 InExpression: T_INT

   12 Expression: Def
   13           | T_INT
   14           | TRUE
   15           | FALSE
   16           | Unary_Op Expression
   17           | Expression Operator Expression

   18 Expression_Right: Location
   19                 | T_INT
   20                 | TRUE
   21                 | FALSE
   22                 | Unary_Op Expression_Right
   23                 | Expression_Right Operator Expression_Right

   24 Statements: Statement SEMI_COLON Statements
   25           | %empty

   26 Statement: Location TEQUAL Expression_Right
   27          | CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND

   28 Callout_Arg: Arguments
   29            | Arguments TCOMMA Callout_Arg

   30 Arguments: Literals
   31          | Expression_Right

   32 Operator: Op

   33 Op: TDIV
   34   | TMUL
   35   | MOD
   36   | TPLUS
   37   | TMINUS
   38   | TGREAT
   39   | TLESS

   40 Unary_Op: NOT
   41         | TMINUS

   42 Type: INT
   43     | BOOLEAN

   44 Literals: CHAR_LITERAL
   45         | STRING_LITERAL
   46         | T_INT
   47         | TRUE
   48         | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 11 13 19 46
IDENTIFIER (259) 7 8 9 10
STRING_LITERAL (260) 27 45
BOOLEAN (261) 43
CALLOUT (262) 27
INT (263) 42
TEQUAL (264) 26
TPLUS (265) 36
TMINUS (266) 37 41
TMUL (267) 34
TDIV (268) 33
NOT (269) 40
MOD (270) 35
RBRACE (271) 1
LBRACE (272) 1
T_NEWLINE (273)
T_QUIT (274)
START (275) 1
TLROUND (276) 27
TRROUND (277) 27
TLSQUARE (278) 7 9
TRSQUARE (279) 7 9
FALSE (280) 15 21 48
TRUE (281) 14 20 47
CHAR_LITERAL (282) 44
TLESS (283) 39
TGREAT (284) 38
SEMI_COLON (285) 4 24
TCOMMA (286) 27 29


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
Program (33)
    on left: 1, on right: 0
Main (34)
    on left: 2 3, on right: 1
Field_Declarations (35)
    on left: 4 5, on right: 2 4
Field_Declaration (36)
    on left: 6, on right: 4
Def (37)
    on left: 7 8, on right: 6 12
Location (38)
    on left: 9 10, on right: 18 26
InExpression (39)
    on left: 11, on right: 7
Expression (40)
    on left: 12 13 14 15 16 17, on right: 9 16 17
Expression_Right (41)
    on left: 18 19 20 21 22 23, on right: 22 23 26 31
Statements (42)
    on left: 24 25, on right: 2 24
Statement (43)
    on left: 26 27, on right: 24
Callout_Arg (44)
    on left: 28 29, on right: 27 29
Arguments (45)
    on left: 30 31, on right: 28 29
Operator (46)
    on left: 32, on right: 17 23
Op (47)
    on left: 33 34 35 36 37 38 39, on right: 32
Unary_Op (48)
    on left: 40 41, on right: 16 22
Type (49)
    on left: 42 43, on right: 6
Literals (50)
    on left: 44 45 46 47 48, on right: 30


State 0

    0 $accept: . Program $end

    START  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: START . LBRACE Main RBRACE

    LBRACE  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: START LBRACE . Main RBRACE

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6

    RBRACE    reduce using rule 3 (Main)
    RBRACE    [reduce using rule 5 (Field_Declarations)]
    $default  reduce using rule 5 (Field_Declarations)

    Main                go to state 7
    Field_Declarations  go to state 8
    Field_Declaration   go to state 9
    Type                go to state 10


State 4

    0 $accept: Program $end .

    $default  accept


State 5

   43 Type: BOOLEAN .

    $default  reduce using rule 43 (Type)


State 6

   42 Type: INT .

    $default  reduce using rule 42 (Type)


State 7

    1 Program: START LBRACE Main . RBRACE

    RBRACE  shift, and go to state 11


State 8

    2 Main: Field_Declarations . Statements

    IDENTIFIER  shift, and go to state 12
    CALLOUT     shift, and go to state 13

    $default  reduce using rule 25 (Statements)

    Location    go to state 14
    Statements  go to state 15
    Statement   go to state 16


State 9

    4 Field_Declarations: Field_Declaration . SEMI_COLON Field_Declarations

    SEMI_COLON  shift, and go to state 17


State 10

    6 Field_Declaration: Type . Def

    IDENTIFIER  shift, and go to state 18

    Def  go to state 19


State 11

    1 Program: START LBRACE Main RBRACE .

    $default  reduce using rule 1 (Program)


State 12

    9 Location: IDENTIFIER . TLSQUARE Expression TRSQUARE
   10         | IDENTIFIER .

    TLSQUARE  shift, and go to state 20

    $default  reduce using rule 10 (Location)


State 13

   27 Statement: CALLOUT . TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND

    TLROUND  shift, and go to state 21


State 14

   26 Statement: Location . TEQUAL Expression_Right

    TEQUAL  shift, and go to state 22


State 15

    2 Main: Field_Declarations Statements .

    $default  reduce using rule 2 (Main)


State 16

   24 Statements: Statement . SEMI_COLON Statements

    SEMI_COLON  shift, and go to state 23


State 17

    4 Field_Declarations: Field_Declaration SEMI_COLON . Field_Declarations

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6

    $default  reduce using rule 5 (Field_Declarations)

    Field_Declarations  go to state 24
    Field_Declaration   go to state 9
    Type                go to state 10


State 18

    7 Def: IDENTIFIER . TLSQUARE InExpression TRSQUARE
    8    | IDENTIFIER .

    TLSQUARE  shift, and go to state 25

    $default  reduce using rule 8 (Def)


State 19

    6 Field_Declaration: Type Def .

    $default  reduce using rule 6 (Field_Declaration)


State 20

    9 Location: IDENTIFIER TLSQUARE . Expression TRSQUARE

    T_INT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 29
    TRUE        shift, and go to state 30

    Def         go to state 31
    Expression  go to state 32
    Unary_Op    go to state 33


State 21

   27 Statement: CALLOUT TLROUND . STRING_LITERAL TCOMMA Callout_Arg TRROUND

    STRING_LITERAL  shift, and go to state 34


State 22

   26 Statement: Location TEQUAL . Expression_Right

    T_INT       shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 36
    TRUE        shift, and go to state 37

    Location          go to state 38
    Expression_Right  go to state 39
    Unary_Op          go to state 40


State 23

   24 Statements: Statement SEMI_COLON . Statements

    IDENTIFIER  shift, and go to state 12
    CALLOUT     shift, and go to state 13

    $default  reduce using rule 25 (Statements)

    Location    go to state 14
    Statements  go to state 41
    Statement   go to state 16


State 24

    4 Field_Declarations: Field_Declaration SEMI_COLON Field_Declarations .

    $default  reduce using rule 4 (Field_Declarations)


State 25

    7 Def: IDENTIFIER TLSQUARE . InExpression TRSQUARE

    T_INT  shift, and go to state 42

    InExpression  go to state 43


State 26

   13 Expression: T_INT .

    $default  reduce using rule 13 (Expression)


State 27

   41 Unary_Op: TMINUS .

    $default  reduce using rule 41 (Unary_Op)


State 28

   40 Unary_Op: NOT .

    $default  reduce using rule 40 (Unary_Op)


State 29

   15 Expression: FALSE .

    $default  reduce using rule 15 (Expression)


State 30

   14 Expression: TRUE .

    $default  reduce using rule 14 (Expression)


State 31

   12 Expression: Def .

    $default  reduce using rule 12 (Expression)


State 32

    9 Location: IDENTIFIER TLSQUARE Expression . TRSQUARE
   17 Expression: Expression . Operator Expression

    TPLUS     shift, and go to state 44
    TMINUS    shift, and go to state 45
    TMUL      shift, and go to state 46
    TDIV      shift, and go to state 47
    MOD       shift, and go to state 48
    TRSQUARE  shift, and go to state 49
    TLESS     shift, and go to state 50
    TGREAT    shift, and go to state 51

    Operator  go to state 52
    Op        go to state 53


State 33

   16 Expression: Unary_Op . Expression

    T_INT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 29
    TRUE        shift, and go to state 30

    Def         go to state 31
    Expression  go to state 54
    Unary_Op    go to state 33


State 34

   27 Statement: CALLOUT TLROUND STRING_LITERAL . TCOMMA Callout_Arg TRROUND

    TCOMMA  shift, and go to state 55


State 35

   19 Expression_Right: T_INT .

    $default  reduce using rule 19 (Expression_Right)


State 36

   21 Expression_Right: FALSE .

    $default  reduce using rule 21 (Expression_Right)


State 37

   20 Expression_Right: TRUE .

    $default  reduce using rule 20 (Expression_Right)


State 38

   18 Expression_Right: Location .

    $default  reduce using rule 18 (Expression_Right)


State 39

   23 Expression_Right: Expression_Right . Operator Expression_Right
   26 Statement: Location TEQUAL Expression_Right .

    TPLUS   shift, and go to state 44
    TMINUS  shift, and go to state 45
    TMUL    shift, and go to state 46
    TDIV    shift, and go to state 47
    MOD     shift, and go to state 48
    TLESS   shift, and go to state 50
    TGREAT  shift, and go to state 51

    $default  reduce using rule 26 (Statement)

    Operator  go to state 56
    Op        go to state 53


State 40

   22 Expression_Right: Unary_Op . Expression_Right

    T_INT       shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 36
    TRUE        shift, and go to state 37

    Location          go to state 38
    Expression_Right  go to state 57
    Unary_Op          go to state 40


State 41

   24 Statements: Statement SEMI_COLON Statements .

    $default  reduce using rule 24 (Statements)


State 42

   11 InExpression: T_INT .

    $default  reduce using rule 11 (InExpression)


State 43

    7 Def: IDENTIFIER TLSQUARE InExpression . TRSQUARE

    TRSQUARE  shift, and go to state 58


State 44

   36 Op: TPLUS .

    $default  reduce using rule 36 (Op)


State 45

   37 Op: TMINUS .

    $default  reduce using rule 37 (Op)


State 46

   34 Op: TMUL .

    $default  reduce using rule 34 (Op)


State 47

   33 Op: TDIV .

    $default  reduce using rule 33 (Op)


State 48

   35 Op: MOD .

    $default  reduce using rule 35 (Op)


State 49

    9 Location: IDENTIFIER TLSQUARE Expression TRSQUARE .

    $default  reduce using rule 9 (Location)


State 50

   39 Op: TLESS .

    $default  reduce using rule 39 (Op)


State 51

   38 Op: TGREAT .

    $default  reduce using rule 38 (Op)


State 52

   17 Expression: Expression Operator . Expression

    T_INT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 29
    TRUE        shift, and go to state 30

    Def         go to state 31
    Expression  go to state 59
    Unary_Op    go to state 33


State 53

   32 Operator: Op .

    $default  reduce using rule 32 (Operator)


State 54

   16 Expression: Unary_Op Expression .
   17           | Expression . Operator Expression

    TPLUS   shift, and go to state 44
    TMINUS  shift, and go to state 45
    TMUL    shift, and go to state 46
    TDIV    shift, and go to state 47
    MOD     shift, and go to state 48
    TLESS   shift, and go to state 50
    TGREAT  shift, and go to state 51

    TPLUS     [reduce using rule 16 (Expression)]
    TMINUS    [reduce using rule 16 (Expression)]
    TMUL      [reduce using rule 16 (Expression)]
    TDIV      [reduce using rule 16 (Expression)]
    MOD       [reduce using rule 16 (Expression)]
    TLESS     [reduce using rule 16 (Expression)]
    TGREAT    [reduce using rule 16 (Expression)]
    $default  reduce using rule 16 (Expression)

    Operator  go to state 52
    Op        go to state 53


State 55

   27 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA . Callout_Arg TRROUND

    T_INT           shift, and go to state 60
    IDENTIFIER      shift, and go to state 12
    STRING_LITERAL  shift, and go to state 61
    TMINUS          shift, and go to state 27
    NOT             shift, and go to state 28
    FALSE           shift, and go to state 62
    TRUE            shift, and go to state 63
    CHAR_LITERAL    shift, and go to state 64

    Location          go to state 38
    Expression_Right  go to state 65
    Callout_Arg       go to state 66
    Arguments         go to state 67
    Unary_Op          go to state 40
    Literals          go to state 68


State 56

   23 Expression_Right: Expression_Right Operator . Expression_Right

    T_INT       shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 36
    TRUE        shift, and go to state 37

    Location          go to state 38
    Expression_Right  go to state 69
    Unary_Op          go to state 40


State 57

   22 Expression_Right: Unary_Op Expression_Right .
   23                 | Expression_Right . Operator Expression_Right

    TPLUS   shift, and go to state 44
    TMINUS  shift, and go to state 45
    TMUL    shift, and go to state 46
    TDIV    shift, and go to state 47
    MOD     shift, and go to state 48
    TLESS   shift, and go to state 50
    TGREAT  shift, and go to state 51

    TPLUS     [reduce using rule 22 (Expression_Right)]
    TMINUS    [reduce using rule 22 (Expression_Right)]
    TMUL      [reduce using rule 22 (Expression_Right)]
    TDIV      [reduce using rule 22 (Expression_Right)]
    MOD       [reduce using rule 22 (Expression_Right)]
    TLESS     [reduce using rule 22 (Expression_Right)]
    TGREAT    [reduce using rule 22 (Expression_Right)]
    $default  reduce using rule 22 (Expression_Right)

    Operator  go to state 56
    Op        go to state 53


State 58

    7 Def: IDENTIFIER TLSQUARE InExpression TRSQUARE .

    $default  reduce using rule 7 (Def)


State 59

   17 Expression: Expression . Operator Expression
   17           | Expression Operator Expression .

    TPLUS   shift, and go to state 44
    TMINUS  shift, and go to state 45
    TMUL    shift, and go to state 46
    TDIV    shift, and go to state 47
    MOD     shift, and go to state 48
    TLESS   shift, and go to state 50
    TGREAT  shift, and go to state 51

    TPLUS     [reduce using rule 17 (Expression)]
    TMINUS    [reduce using rule 17 (Expression)]
    TMUL      [reduce using rule 17 (Expression)]
    TDIV      [reduce using rule 17 (Expression)]
    MOD       [reduce using rule 17 (Expression)]
    TLESS     [reduce using rule 17 (Expression)]
    TGREAT    [reduce using rule 17 (Expression)]
    $default  reduce using rule 17 (Expression)

    Operator  go to state 52
    Op        go to state 53


State 60

   19 Expression_Right: T_INT .
   46 Literals: T_INT .

    TRROUND   reduce using rule 19 (Expression_Right)
    TRROUND   [reduce using rule 46 (Literals)]
    TCOMMA    reduce using rule 19 (Expression_Right)
    TCOMMA    [reduce using rule 46 (Literals)]
    $default  reduce using rule 19 (Expression_Right)


State 61

   45 Literals: STRING_LITERAL .

    $default  reduce using rule 45 (Literals)


State 62

   21 Expression_Right: FALSE .
   48 Literals: FALSE .

    TRROUND   reduce using rule 21 (Expression_Right)
    TRROUND   [reduce using rule 48 (Literals)]
    TCOMMA    reduce using rule 21 (Expression_Right)
    TCOMMA    [reduce using rule 48 (Literals)]
    $default  reduce using rule 21 (Expression_Right)


State 63

   20 Expression_Right: TRUE .
   47 Literals: TRUE .

    TRROUND   reduce using rule 20 (Expression_Right)
    TRROUND   [reduce using rule 47 (Literals)]
    TCOMMA    reduce using rule 20 (Expression_Right)
    TCOMMA    [reduce using rule 47 (Literals)]
    $default  reduce using rule 20 (Expression_Right)


State 64

   44 Literals: CHAR_LITERAL .

    $default  reduce using rule 44 (Literals)


State 65

   23 Expression_Right: Expression_Right . Operator Expression_Right
   31 Arguments: Expression_Right .

    TPLUS   shift, and go to state 44
    TMINUS  shift, and go to state 45
    TMUL    shift, and go to state 46
    TDIV    shift, and go to state 47
    MOD     shift, and go to state 48
    TLESS   shift, and go to state 50
    TGREAT  shift, and go to state 51

    $default  reduce using rule 31 (Arguments)

    Operator  go to state 56
    Op        go to state 53


State 66

   27 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg . TRROUND

    TRROUND  shift, and go to state 70


State 67

   28 Callout_Arg: Arguments .
   29            | Arguments . TCOMMA Callout_Arg

    TCOMMA  shift, and go to state 71

    $default  reduce using rule 28 (Callout_Arg)


State 68

   30 Arguments: Literals .

    $default  reduce using rule 30 (Arguments)


State 69

   23 Expression_Right: Expression_Right . Operator Expression_Right
   23                 | Expression_Right Operator Expression_Right .

    TPLUS   shift, and go to state 44
    TMINUS  shift, and go to state 45
    TMUL    shift, and go to state 46
    TDIV    shift, and go to state 47
    MOD     shift, and go to state 48
    TLESS   shift, and go to state 50
    TGREAT  shift, and go to state 51

    TPLUS     [reduce using rule 23 (Expression_Right)]
    TMINUS    [reduce using rule 23 (Expression_Right)]
    TMUL      [reduce using rule 23 (Expression_Right)]
    TDIV      [reduce using rule 23 (Expression_Right)]
    MOD       [reduce using rule 23 (Expression_Right)]
    TLESS     [reduce using rule 23 (Expression_Right)]
    TGREAT    [reduce using rule 23 (Expression_Right)]
    $default  reduce using rule 23 (Expression_Right)

    Operator  go to state 56
    Op        go to state 53


State 70

   27 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND .

    $default  reduce using rule 27 (Statement)


State 71

   29 Callout_Arg: Arguments TCOMMA . Callout_Arg

    T_INT           shift, and go to state 60
    IDENTIFIER      shift, and go to state 12
    STRING_LITERAL  shift, and go to state 61
    TMINUS          shift, and go to state 27
    NOT             shift, and go to state 28
    FALSE           shift, and go to state 62
    TRUE            shift, and go to state 63
    CHAR_LITERAL    shift, and go to state 64

    Location          go to state 38
    Expression_Right  go to state 65
    Callout_Arg       go to state 72
    Arguments         go to state 67
    Unary_Op          go to state 40
    Literals          go to state 68


State 72

   29 Callout_Arg: Arguments TCOMMA Callout_Arg .

    $default  reduce using rule 29 (Callout_Arg)
