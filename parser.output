Terminals unused in grammar

   T_NEWLINE
   T_QUIT


State 3 conflicts: 1 reduce/reduce
State 52 conflicts: 7 shift/reduce
State 56 conflicts: 7 shift/reduce
State 57 conflicts: 7 shift/reduce
State 67 conflicts: 7 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: START LBRACE Main RBRACE

    2 Main: Field_Declarations Statements
    3     | %empty

    4 Field_Declarations: Field_Declaration SEMI_COLON Field_Declarations
    5                   | %empty

    6 Field_Declaration: Type Def

    7 Def: IDENTIFIER TLSQUARE InExpression TRSQUARE
    8    | IDENTIFIER

    9 Location: IDENTIFIER TLSQUARE Expression TRSQUARE
   10         | IDENTIFIER

   11 InExpression: Def
   12             | T_INT
   13             | TRUE
   14             | FALSE
   15             | Unary_Op InExpression
   16             | InExpression Op InExpression

   17 Expression: Def
   18           | T_INT
   19           | TRUE
   20           | FALSE
   21           | Unary_Op Expression
   22           | Expression Op Expression

   23 Statements: Statement SEMI_COLON Statements
   24           | %empty

   25 Statement: Location TEQUAL Expression
   26          | CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND

   27 Callout_Arg: Arguments
   28            | Arguments TCOMMA Callout_Arg

   29 Arguments: Literals
   30          | IDENTIFIER

   31 Op: TDIV
   32   | TMUL
   33   | MOD
   34   | TPLUS
   35   | TMINUS
   36   | TGREAT
   37   | TLESS

   38 Unary_Op: NOT
   39         | TMINUS

   40 Type: INT
   41     | BOOLEAN

   42 Literals: CHAR_LITERAL
   43         | STRING_LITERAL
   44         | T_INT
   45         | TRUE
   46         | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 12 18 44
IDENTIFIER (259) 7 8 9 10 30
BOOLEAN (260) 41
CALLOUT (261) 26
INT (262) 40
TEQUAL (263) 25
TPLUS (264) 34
TMINUS (265) 35 39
TMUL (266) 32
TDIV (267) 31
NOT (268) 38
MOD (269) 33
RBRACE (270) 1
LBRACE (271) 1
T_NEWLINE (272)
T_QUIT (273)
START (274) 1
TLROUND (275) 26
TRROUND (276) 26
TLSQUARE (277) 7 9
TRSQUARE (278) 7 9
FALSE (279) 14 20 46
TRUE (280) 13 19 45
STRING_LITERAL (281) 26 43
CHAR_LITERAL (282) 42
TLESS (283) 37
TGREAT (284) 36
SEMI_COLON (285) 4 23
TCOMMA (286) 26 28


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
Program (33)
    on left: 1, on right: 0
Main (34)
    on left: 2 3, on right: 1
Field_Declarations (35)
    on left: 4 5, on right: 2 4
Field_Declaration (36)
    on left: 6, on right: 4
Def (37)
    on left: 7 8, on right: 6 11 17
Location (38)
    on left: 9 10, on right: 25
InExpression (39)
    on left: 11 12 13 14 15 16, on right: 7 15 16
Expression (40)
    on left: 17 18 19 20 21 22, on right: 9 21 22 25
Statements (41)
    on left: 23 24, on right: 2 23
Statement (42)
    on left: 25 26, on right: 23
Callout_Arg (43)
    on left: 27 28, on right: 26 28
Arguments (44)
    on left: 29 30, on right: 27 28
Op (45)
    on left: 31 32 33 34 35 36 37, on right: 16 22
Unary_Op (46)
    on left: 38 39, on right: 15 21
Type (47)
    on left: 40 41, on right: 6
Literals (48)
    on left: 42 43 44 45 46, on right: 29


State 0

    0 $accept: . Program $end

    START  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: START . LBRACE Main RBRACE

    LBRACE  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: START LBRACE . Main RBRACE

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6

    RBRACE    reduce using rule 3 (Main)
    RBRACE    [reduce using rule 5 (Field_Declarations)]
    $default  reduce using rule 5 (Field_Declarations)

    Main                go to state 7
    Field_Declarations  go to state 8
    Field_Declaration   go to state 9
    Type                go to state 10


State 4

    0 $accept: Program $end .

    $default  accept


State 5

   41 Type: BOOLEAN .

    $default  reduce using rule 41 (Type)


State 6

   40 Type: INT .

    $default  reduce using rule 40 (Type)


State 7

    1 Program: START LBRACE Main . RBRACE

    RBRACE  shift, and go to state 11


State 8

    2 Main: Field_Declarations . Statements

    IDENTIFIER  shift, and go to state 12
    CALLOUT     shift, and go to state 13

    $default  reduce using rule 24 (Statements)

    Location    go to state 14
    Statements  go to state 15
    Statement   go to state 16


State 9

    4 Field_Declarations: Field_Declaration . SEMI_COLON Field_Declarations

    SEMI_COLON  shift, and go to state 17


State 10

    6 Field_Declaration: Type . Def

    IDENTIFIER  shift, and go to state 18

    Def  go to state 19


State 11

    1 Program: START LBRACE Main RBRACE .

    $default  reduce using rule 1 (Program)


State 12

    9 Location: IDENTIFIER . TLSQUARE Expression TRSQUARE
   10         | IDENTIFIER .

    TLSQUARE  shift, and go to state 20

    $default  reduce using rule 10 (Location)


State 13

   26 Statement: CALLOUT . TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND

    TLROUND  shift, and go to state 21


State 14

   25 Statement: Location . TEQUAL Expression

    TEQUAL  shift, and go to state 22


State 15

    2 Main: Field_Declarations Statements .

    $default  reduce using rule 2 (Main)


State 16

   23 Statements: Statement . SEMI_COLON Statements

    SEMI_COLON  shift, and go to state 23


State 17

    4 Field_Declarations: Field_Declaration SEMI_COLON . Field_Declarations

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6

    $default  reduce using rule 5 (Field_Declarations)

    Field_Declarations  go to state 24
    Field_Declaration   go to state 9
    Type                go to state 10


State 18

    7 Def: IDENTIFIER . TLSQUARE InExpression TRSQUARE
    8    | IDENTIFIER .

    TLSQUARE  shift, and go to state 25

    $default  reduce using rule 8 (Def)


State 19

    6 Field_Declaration: Type Def .

    $default  reduce using rule 6 (Field_Declaration)


State 20

    9 Location: IDENTIFIER TLSQUARE . Expression TRSQUARE

    T_INT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 29
    TRUE        shift, and go to state 30

    Def         go to state 31
    Expression  go to state 32
    Unary_Op    go to state 33


State 21

   26 Statement: CALLOUT TLROUND . STRING_LITERAL TCOMMA Callout_Arg TRROUND

    STRING_LITERAL  shift, and go to state 34


State 22

   25 Statement: Location TEQUAL . Expression

    T_INT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 29
    TRUE        shift, and go to state 30

    Def         go to state 31
    Expression  go to state 35
    Unary_Op    go to state 33


State 23

   23 Statements: Statement SEMI_COLON . Statements

    IDENTIFIER  shift, and go to state 12
    CALLOUT     shift, and go to state 13

    $default  reduce using rule 24 (Statements)

    Location    go to state 14
    Statements  go to state 36
    Statement   go to state 16


State 24

    4 Field_Declarations: Field_Declaration SEMI_COLON Field_Declarations .

    $default  reduce using rule 4 (Field_Declarations)


State 25

    7 Def: IDENTIFIER TLSQUARE . InExpression TRSQUARE

    T_INT       shift, and go to state 37
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39

    Def           go to state 40
    InExpression  go to state 41
    Unary_Op      go to state 42


State 26

   18 Expression: T_INT .

    $default  reduce using rule 18 (Expression)


State 27

   39 Unary_Op: TMINUS .

    $default  reduce using rule 39 (Unary_Op)


State 28

   38 Unary_Op: NOT .

    $default  reduce using rule 38 (Unary_Op)


State 29

   20 Expression: FALSE .

    $default  reduce using rule 20 (Expression)


State 30

   19 Expression: TRUE .

    $default  reduce using rule 19 (Expression)


State 31

   17 Expression: Def .

    $default  reduce using rule 17 (Expression)


State 32

    9 Location: IDENTIFIER TLSQUARE Expression . TRSQUARE
   22 Expression: Expression . Op Expression

    TPLUS     shift, and go to state 43
    TMINUS    shift, and go to state 44
    TMUL      shift, and go to state 45
    TDIV      shift, and go to state 46
    MOD       shift, and go to state 47
    TRSQUARE  shift, and go to state 48
    TLESS     shift, and go to state 49
    TGREAT    shift, and go to state 50

    Op  go to state 51


State 33

   21 Expression: Unary_Op . Expression

    T_INT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 29
    TRUE        shift, and go to state 30

    Def         go to state 31
    Expression  go to state 52
    Unary_Op    go to state 33


State 34

   26 Statement: CALLOUT TLROUND STRING_LITERAL . TCOMMA Callout_Arg TRROUND

    TCOMMA  shift, and go to state 53


State 35

   22 Expression: Expression . Op Expression
   25 Statement: Location TEQUAL Expression .

    TPLUS   shift, and go to state 43
    TMINUS  shift, and go to state 44
    TMUL    shift, and go to state 45
    TDIV    shift, and go to state 46
    MOD     shift, and go to state 47
    TLESS   shift, and go to state 49
    TGREAT  shift, and go to state 50

    $default  reduce using rule 25 (Statement)

    Op  go to state 51


State 36

   23 Statements: Statement SEMI_COLON Statements .

    $default  reduce using rule 23 (Statements)


State 37

   12 InExpression: T_INT .

    $default  reduce using rule 12 (InExpression)


State 38

   14 InExpression: FALSE .

    $default  reduce using rule 14 (InExpression)


State 39

   13 InExpression: TRUE .

    $default  reduce using rule 13 (InExpression)


State 40

   11 InExpression: Def .

    $default  reduce using rule 11 (InExpression)


State 41

    7 Def: IDENTIFIER TLSQUARE InExpression . TRSQUARE
   16 InExpression: InExpression . Op InExpression

    TPLUS     shift, and go to state 43
    TMINUS    shift, and go to state 44
    TMUL      shift, and go to state 45
    TDIV      shift, and go to state 46
    MOD       shift, and go to state 47
    TRSQUARE  shift, and go to state 54
    TLESS     shift, and go to state 49
    TGREAT    shift, and go to state 50

    Op  go to state 55


State 42

   15 InExpression: Unary_Op . InExpression

    T_INT       shift, and go to state 37
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39

    Def           go to state 40
    InExpression  go to state 56
    Unary_Op      go to state 42


State 43

   34 Op: TPLUS .

    $default  reduce using rule 34 (Op)


State 44

   35 Op: TMINUS .

    $default  reduce using rule 35 (Op)


State 45

   32 Op: TMUL .

    $default  reduce using rule 32 (Op)


State 46

   31 Op: TDIV .

    $default  reduce using rule 31 (Op)


State 47

   33 Op: MOD .

    $default  reduce using rule 33 (Op)


State 48

    9 Location: IDENTIFIER TLSQUARE Expression TRSQUARE .

    $default  reduce using rule 9 (Location)


State 49

   37 Op: TLESS .

    $default  reduce using rule 37 (Op)


State 50

   36 Op: TGREAT .

    $default  reduce using rule 36 (Op)


State 51

   22 Expression: Expression Op . Expression

    T_INT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 29
    TRUE        shift, and go to state 30

    Def         go to state 31
    Expression  go to state 57
    Unary_Op    go to state 33


State 52

   21 Expression: Unary_Op Expression .
   22           | Expression . Op Expression

    TPLUS   shift, and go to state 43
    TMINUS  shift, and go to state 44
    TMUL    shift, and go to state 45
    TDIV    shift, and go to state 46
    MOD     shift, and go to state 47
    TLESS   shift, and go to state 49
    TGREAT  shift, and go to state 50

    TPLUS     [reduce using rule 21 (Expression)]
    TMINUS    [reduce using rule 21 (Expression)]
    TMUL      [reduce using rule 21 (Expression)]
    TDIV      [reduce using rule 21 (Expression)]
    MOD       [reduce using rule 21 (Expression)]
    TLESS     [reduce using rule 21 (Expression)]
    TGREAT    [reduce using rule 21 (Expression)]
    $default  reduce using rule 21 (Expression)

    Op  go to state 51


State 53

   26 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA . Callout_Arg TRROUND

    T_INT           shift, and go to state 58
    IDENTIFIER      shift, and go to state 59
    FALSE           shift, and go to state 60
    TRUE            shift, and go to state 61
    STRING_LITERAL  shift, and go to state 62
    CHAR_LITERAL    shift, and go to state 63

    Callout_Arg  go to state 64
    Arguments    go to state 65
    Literals     go to state 66


State 54

    7 Def: IDENTIFIER TLSQUARE InExpression TRSQUARE .

    $default  reduce using rule 7 (Def)


State 55

   16 InExpression: InExpression Op . InExpression

    T_INT       shift, and go to state 37
    IDENTIFIER  shift, and go to state 18
    TMINUS      shift, and go to state 27
    NOT         shift, and go to state 28
    FALSE       shift, and go to state 38
    TRUE        shift, and go to state 39

    Def           go to state 40
    InExpression  go to state 67
    Unary_Op      go to state 42


State 56

   15 InExpression: Unary_Op InExpression .
   16             | InExpression . Op InExpression

    TPLUS   shift, and go to state 43
    TMINUS  shift, and go to state 44
    TMUL    shift, and go to state 45
    TDIV    shift, and go to state 46
    MOD     shift, and go to state 47
    TLESS   shift, and go to state 49
    TGREAT  shift, and go to state 50

    TPLUS     [reduce using rule 15 (InExpression)]
    TMINUS    [reduce using rule 15 (InExpression)]
    TMUL      [reduce using rule 15 (InExpression)]
    TDIV      [reduce using rule 15 (InExpression)]
    MOD       [reduce using rule 15 (InExpression)]
    TLESS     [reduce using rule 15 (InExpression)]
    TGREAT    [reduce using rule 15 (InExpression)]
    $default  reduce using rule 15 (InExpression)

    Op  go to state 55


State 57

   22 Expression: Expression . Op Expression
   22           | Expression Op Expression .

    TPLUS   shift, and go to state 43
    TMINUS  shift, and go to state 44
    TMUL    shift, and go to state 45
    TDIV    shift, and go to state 46
    MOD     shift, and go to state 47
    TLESS   shift, and go to state 49
    TGREAT  shift, and go to state 50

    TPLUS     [reduce using rule 22 (Expression)]
    TMINUS    [reduce using rule 22 (Expression)]
    TMUL      [reduce using rule 22 (Expression)]
    TDIV      [reduce using rule 22 (Expression)]
    MOD       [reduce using rule 22 (Expression)]
    TLESS     [reduce using rule 22 (Expression)]
    TGREAT    [reduce using rule 22 (Expression)]
    $default  reduce using rule 22 (Expression)

    Op  go to state 51


State 58

   44 Literals: T_INT .

    $default  reduce using rule 44 (Literals)


State 59

   30 Arguments: IDENTIFIER .

    $default  reduce using rule 30 (Arguments)


State 60

   46 Literals: FALSE .

    $default  reduce using rule 46 (Literals)


State 61

   45 Literals: TRUE .

    $default  reduce using rule 45 (Literals)


State 62

   43 Literals: STRING_LITERAL .

    $default  reduce using rule 43 (Literals)


State 63

   42 Literals: CHAR_LITERAL .

    $default  reduce using rule 42 (Literals)


State 64

   26 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg . TRROUND

    TRROUND  shift, and go to state 68


State 65

   27 Callout_Arg: Arguments .
   28            | Arguments . TCOMMA Callout_Arg

    TCOMMA  shift, and go to state 69

    $default  reduce using rule 27 (Callout_Arg)


State 66

   29 Arguments: Literals .

    $default  reduce using rule 29 (Arguments)


State 67

   16 InExpression: InExpression . Op InExpression
   16             | InExpression Op InExpression .

    TPLUS   shift, and go to state 43
    TMINUS  shift, and go to state 44
    TMUL    shift, and go to state 45
    TDIV    shift, and go to state 46
    MOD     shift, and go to state 47
    TLESS   shift, and go to state 49
    TGREAT  shift, and go to state 50

    TPLUS     [reduce using rule 16 (InExpression)]
    TMINUS    [reduce using rule 16 (InExpression)]
    TMUL      [reduce using rule 16 (InExpression)]
    TDIV      [reduce using rule 16 (InExpression)]
    MOD       [reduce using rule 16 (InExpression)]
    TLESS     [reduce using rule 16 (InExpression)]
    TGREAT    [reduce using rule 16 (InExpression)]
    $default  reduce using rule 16 (InExpression)

    Op  go to state 55


State 68

   26 Statement: CALLOUT TLROUND STRING_LITERAL TCOMMA Callout_Arg TRROUND .

    $default  reduce using rule 26 (Statement)


State 69

   28 Callout_Arg: Arguments TCOMMA . Callout_Arg

    T_INT           shift, and go to state 58
    IDENTIFIER      shift, and go to state 59
    FALSE           shift, and go to state 60
    TRUE            shift, and go to state 61
    STRING_LITERAL  shift, and go to state 62
    CHAR_LITERAL    shift, and go to state 63

    Callout_Arg  go to state 70
    Arguments    go to state 65
    Literals     go to state 66


State 70

   28 Callout_Arg: Arguments TCOMMA Callout_Arg .

    $default  reduce using rule 28 (Callout_Arg)
